AWSTemplateFormatVersion: 2010-09-09
Description: "template for rds instance"
Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - "prod"
      - "dev"
      - "test"
  DBInstanceID:
    Default: DB
    Description: My database instance
    Type: String
    MinLength: "1"
    MaxLength: "63"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
      consecutive hyphens.
  DBName:
    Default: MainDB
    Description: My database
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBInstanceClass:
    Default: db.t2.micro
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.
  DBAllocatedStorage:
    Default: "25"
    Description: The size of the database (GiB)
    Type: Number
    MinValue: "20"
    MaxValue: "65536"
    ConstraintDescription: must be between 20 and 65536 GiB.
Resources:
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "DatabaseSecurityGroup-${Environment}"
      GroupDescription: "allows traffic on port 5432"
      VpcId: !Sub "{{resolve:secretsmanager:VpcId-${Environment}}}"
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: name
          Value: DatabaseSecurityGroup
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      DBName: !Sub "${DBName}${Environment}"
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      DBInstanceIdentifier: !Sub "${DBInstanceID}-${Environment}"
      Engine: postgres
      EngineVersion: 12.7
      MasterUsername: !Sub "{{resolve:secretsmanager:DBUsername-${Environment}}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:DBPassword-${Environment}}}"
      Port: 5432
      PubliclyAccessible: false
      StorageEncrypted: false
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
    DependsOn:
      - DatabaseUsernameSecret
      - DatabasePasswordSecret
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "group for private subnets"
      SubnetIds:
        - !Sub "{{resolve:secretsmanager:PrivateSubnet1-${Environment}}}"
        - !Sub "{{resolve:secretsmanager:PrivateSubnet2-${Environment}}}"
      Tags:
        - Key: name
          Value: !Sub "PrivateSubnetGroup-${Environment}"

  # Secrets
  DatabaseUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "DBUsername-${Environment}"
      Description: "Username for main database"
      GenerateSecretString:
        ExcludeNumbers: true
        ExcludePunctuation: true
        ExcludeUppercase: true
        PasswordLength: 10
  DatabasePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "DBPassword-${Environment}"
      Description: "Password for main database"
      GenerateSecretString:
        PasswordLength: 24
        ExcludeCharacters: "\"@/\\"
  DatabaseEndpoint:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !GetAtt Database.Endpoint.Address
      Name: !Sub "DBEndpoint-${Environment}"
  DatabaseName:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !Ref DBName
      Name: !Sub "DBName-${Environment}"
  DatabasePort:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !GetAtt Database.Endpoint.Port
      Name: !Sub "DBPort-${Environment}"
